/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) 
    {
        ListNode *returnNode = new ListNode;
        ListNode *head = returnNode;
        
        while( l1 != NULL && l2 != NULL )
        {
            if(l1->val <= l2->val)
            {
                returnNode->next = l1;
                l1=l1->next;
            }
            else
            {
                returnNode->next = l2;
                l2 = l2->next;
            }
            returnNode = returnNode->next;
        }
        
        if(l1 == NULL)
        {
            returnNode->next = l2;
        }
        if(l2 == NULL)
        {
            returnNode->next = l1;
        }
      return head->next;   
    }
};
