class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) 
    {
       vector<int> res;
       unordered_map<int,int> m;
        
        for(int i=0;i<nums.size();i++)
        {
            if(m.find(target-nums.at(i)) != m.end() )
            {
                res.push_back(i);
                res.push_back( m[target - nums.at(i)]);
                break;
            }
            
            m[nums.at(i)]=i;
            
        }
        
        return res;
    }
    
};

/////////////////////////// ^^^^^^^^^^^ Above solution takes 14 ms time in Given TestCases..

--------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------


class Solution {
public:
    vector<int> twoSum(vector<int>& nums,int target) 
    {
        
        vector <int> v;
             for(int i=0;i<nums.size();i++)
                 v.push_back(nums.at(i));
        
         sort(nums.begin(),nums.end());
         vector<int> res;
         int i=0,j=nums.size()-1;
         while (nums.at(i) < nums.at(j))
          {
              if (nums.at(i) + nums.at(j)  ==  target)
              {
                   break;
              }
              else if (nums.at(i) + nums.at(j) < target)
                  i++;
              else
                  j--;
           }
            int x=0,y=0,cnt=0;
            for(int k=0; k<v.size(); k++)
            {
                if(nums.at(i) == nums.at(j))
                {
                    if(v.at(k) == nums.at(i) && cnt<2 )
                       {res.push_back(k); cnt++;}
                }
                else
                {
                    if(v.at(k) == nums.at(i) && x==0 )
                       {res.push_back(k); x=1;}
                    if(v.at(k) == nums.at(j) && y==0 )
                       {res.push_back(k); y=1;}
                    if(x==1 && y==1)
                        break;
                }
            }
        
         return res;
    }
};


:::::::::::::::::::::::::::::::::::::::;;   Above solution takes 4 ms time for the same testcase ::::::::::::::::::::::::::::::::::::::::
